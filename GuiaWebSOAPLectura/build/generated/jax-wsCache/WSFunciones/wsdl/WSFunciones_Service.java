
package wsdl;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.0
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "WSFunciones", targetNamespace = "http://ws/", wsdlLocation = "http://localhost:8080/GuiaWebSOAP/WSFunciones?WSDL")
public class WSFunciones_Service
    extends Service
{

    private final static URL WSFUNCIONES_WSDL_LOCATION;
    private final static WebServiceException WSFUNCIONES_EXCEPTION;
    private final static QName WSFUNCIONES_QNAME = new QName("http://ws/", "WSFunciones");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/GuiaWebSOAP/WSFunciones?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        WSFUNCIONES_WSDL_LOCATION = url;
        WSFUNCIONES_EXCEPTION = e;
    }

    public WSFunciones_Service() {
        super(__getWsdlLocation(), WSFUNCIONES_QNAME);
    }

    public WSFunciones_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    /**
     * 
     * @return
     *     returns WSFunciones
     */
    @WebEndpoint(name = "WSFuncionesPort")
    public WSFunciones getWSFuncionesPort() {
        return super.getPort(new QName("http://ws/", "WSFuncionesPort"), WSFunciones.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSFunciones
     */
    @WebEndpoint(name = "WSFuncionesPort")
    public WSFunciones getWSFuncionesPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws/", "WSFuncionesPort"), WSFunciones.class, features);
    }

    private static URL __getWsdlLocation() {
        if (WSFUNCIONES_EXCEPTION!= null) {
            throw WSFUNCIONES_EXCEPTION;
        }
        return WSFUNCIONES_WSDL_LOCATION;
    }

}
